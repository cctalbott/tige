package com.build.main {	import flash.printing.PrintJob;	import flash.printing.PrintJobOptions;	import flash.display.Sprite;	import flash.display.MovieClip;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFieldAutoSize;	import flash.text.AntiAliasType;	import flash.display.Stage;	import flash.geom.Rectangle;	import flash.events.Event;		public class PrintBuildClass extends Sprite {		private var _content:Sprite;		private var bg:Sprite;		private var _theBoat:Sprite;		private var _txtHead:TextField = new TextField();		private var txt:TextField;		private var _txt2:TextField = new TextField();		private var _txtFoot:TextField = new TextField();		private var _txtFormatHead:TextFormat = new TextFormat();		private var txtFormat:TextFormat = new TextFormat();				public function PrintBuildClass():void {			printInit();		}				private function printInit():void {			_content = new Sprite();			_content.x = 0;			_content.y = 0;						_theBoat = new Sprite();						bg = new Sprite();            bg.graphics.beginFill(0xFFFFFF, 1);            bg.graphics.drawRect(0, 0, 577, 734);            bg.graphics.endFill();			bg.x = 0;			bg.y = 0;						_txtFormatHead.size = 12;			_txtFormatHead.font = "Univers 55";			_txtFormatHead.bold = true;						_txtHead.embedFonts = true;			_txtHead.autoSize = TextFieldAutoSize.LEFT;			_txtHead.defaultTextFormat = _txtFormatHead;						txtFormat.size = 9;			txtFormat.leading = 9;			txtFormat.font = "Univers 55";			            txt = new TextField();			txt.embedFonts = true;			txt.antiAliasType = AntiAliasType.ADVANCED;			txt.autoSize = TextFieldAutoSize.LEFT;			txt.defaultTextFormat = txtFormat;			txt.x = 0;			txt.y = 20;						_txt2.embedFonts = true;			_txt2.autoSize = TextFieldAutoSize.LEFT;			_txt2.defaultTextFormat = txtFormat;			_txt2.x = 200;			_txt2.y = 20;						_txtFoot.embedFonts = true;			_txtFoot.autoSize = TextFieldAutoSize.LEFT;			_txtFoot.defaultTextFormat = txtFormat;			_txtFoot.x = 0;			_txtFoot.y = 700;						addChild(_content);			_content.addChild(bg);			_content.addChild(_txtHead);			_content.addChild(txt);			_content.addChild(_txt2);			_content.addChild(_theBoat);			_content.addChild(_txtFoot);			_content.addEventListener(Event.ADDED_TO_STAGE, printDraw);        }		private function printDraw(event:Event):void {			_txtHead.text = "TIGÉ " + MovieClip(parent)._model;            			txt.text = "Deck Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._deckColor] + "\n";			if(MovieClip(parent)._vescheme == "flex" || MovieClip(parent)._model == "RZ4" || MovieClip(parent)._model == "RZ2" || MovieClip(parent)._model == "Z1") {				txt.appendText("Deck Accent Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._deckAccentColor] + "\n");			}						if(MovieClip(parent)._model == "RZ4" || MovieClip(parent)._model == "RZ2" || MovieClip(parent)._model == "Z1") 			{				txt.appendText("Split Deck Accent Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._splitDeckAccentColor] + "\n");			}						txt.appendText("Hull Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._hullColor] + "\n");			txt.appendText("Main Panel Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._mainPanelColor] + "\n");			if(MovieClip(parent)._model != "Z1") {				txt.appendText("Second Panel Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._secondPanelColor] + "\n");			}			txt.appendText("Swim Platform Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._swimPlatformColor] + "\n");			if(MovieClip(parent)._model == "RZ4" || MovieClip(parent)._model == "RZ2") {				txt.appendText("Graphic: " + MovieClip(parent)._rzGraphicName + "\n");				if(MovieClip(parent)._rzGraphicName == "freeride") {					_txt2.text = "Graphic Aft Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._freerideAftColor] + "\n";					_txt2.appendText("Graphic Bow Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._freerideBowColor] + "\n");				} else if(MovieClip(parent)._rzGraphicName == "pure") {					_txt2.text = "Graphic Aft Color: " + MovieClip(parent)._colorNames["c13"] + "\n";					_txt2.appendText("Graphic Bow Color: " + MovieClip(parent)._colorNames["c13"] + "\n");				}			} else if(MovieClip(parent)._model == "Z1") {				txt.appendText("Graphic: " + MovieClip(parent)._z1GraphicName + "\n");				if(MovieClip(parent)._z1GraphicName == "freeride") {					_txt2.text = "Graphic Aft Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._freerideAftColor] + "\n";					_txt2.appendText("Graphic Bow Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._z1FreerideBowColor] + "\n");				} else {					_txt2.text = "Graphic Aft Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._streamlineColor] + "\n";					_txt2.appendText("Graphic Bow Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._streamlineColor] + "\n");				}			} else if(MovieClip(parent)._model == "24Vé" || MovieClip(parent)._model == "22Vé" || MovieClip(parent)._model == "22i" || MovieClip(parent)._model == "20V" || MovieClip(parent)._model == "20i") {				txt.appendText("Graphic: " + MovieClip(parent)._veGraphicName + "\n");			}			_txt2.appendText("Interior Package: " + MovieClip(parent)._intPkgColor + "\n");			if(MovieClip(parent)._model == "24Vé" || MovieClip(parent)._model == "22Vé" || MovieClip(parent)._model == "RZ2" || MovieClip(parent)._model == "RZ4" || MovieClip(parent)._model == "Z1") {				_txt2.appendText("Accent Vinyl Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._accentVinylColor] + "\n");			} else {				_txt2.appendText("Piping Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._accentVinylColor] + "\n");			}			if(MovieClip(parent)._model != "22i" && MovieClip(parent)._model != "20V" && MovieClip(parent)._model != "20i") {				_txt2.appendText("Dash Accent Color: " + MovieClip(parent)._colorNames[MovieClip(parent)._dashAccentColor] + "\n");			}			if(MovieClip(parent)._model == "24Vé" || MovieClip(parent)._model == "22Vé" || MovieClip(parent)._model == "RZ2" || MovieClip(parent)._model == "RZ4" || MovieClip(parent)._model == "Z1") {				_txt2.appendText("Accent Texture: " + MovieClip(parent)._accentTextureName + "\n");			} else {				if(MovieClip(parent)._accentTextureColor == "none") {					_txt2.appendText("Accent Vinyl: " + MovieClip(parent)._accentTextureName + "\n");				} else {					_txt2.appendText("Accent Vinyl: " + MovieClip(parent)._colorNames[MovieClip(parent)._accentTextureColor] + "\n");				}			}						_theBoat.addChild(MovieClip(parent.parent.parent).loadView);			_theBoat.width = 576;			_theBoat.height = 400;			_theBoat.x = 0;			_theBoat.y = 200;			_theBoat.getChildAt(0).x = 0;						_txtFoot.text = "1801 Highway 36, Abilene, TX 79602 | p.325.676.7777 f.325.677.1136 | info@tige.com | tige.com";						printPage();        }		private function printPage():void {			var pj:PrintJob = new PrintJob();			var pjOptions:PrintJobOptions = new PrintJobOptions();            pjOptions.printAsBitmap = true;            if(pj.start()) {                /*trace(">> pj.orientation: " + pj.orientation);                trace(">> pj.pageWidth: " + pj.pageWidth);                trace(">> pj.pageHeight: " + pj.pageHeight);                trace(">> pj.paperWidth: " + pj.paperWidth);                trace(">> pj.paperHeight: " + pj.paperHeight);*/                    try {                    pj.addPage(_content, null, pjOptions);                } catch(error:Error) {                    // Do nothing.                }                pj.send();				_theBoat.getChildAt(0).x = 210;				MovieClip(parent.parent.parent).addChild(_theBoat.getChildAt(0));				removeChild(_content);            } else {                txt.text = "Print job canceled";				_theBoat.getChildAt(0).x = 210;				MovieClip(parent.parent.parent).addChild(_theBoat.getChildAt(0));				removeChild(_content);            }        }	}}