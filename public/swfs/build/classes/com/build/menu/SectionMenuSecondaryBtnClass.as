package com.build.menu {	import flash.display.Sprite;	import flash.display.MovieClip;	import flash.display.InteractiveObject;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFieldAutoSize;	import flash.text.AntiAliasType;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.geom.Transform;	import flash.geom.ColorTransform;	import flash.errors.ScriptTimeoutError;		public class SectionMenuSecondaryBtnClass extends Sprite {		private var _content:Sprite = new Sprite;		private var _btnHolder:Sprite = new Sprite;		private var _mainFormat:TextFormat = new TextFormat();		private var _mainTxt:TextField = new TextField();		private var _theTxt:String = new String();				public function SectionMenuSecondaryBtnClass(theTxt:String) 		{			init(theTxt);		}				public function removeSpecExtListeners(theItem:String):void 		{			var theItemExt:Sprite = Sprite(this.parent.parent.getChildByName("_exteriorSections"));			var theBaseExt:SectionMenuSecondaryBtnClass = SectionMenuSecondaryBtnClass(theItemExt.getChildByName(theItem));						Sprite(theBaseExt.getChildAt(0)).getChildAt(0).dispatchEvent(new MouseEvent(MouseEvent.CLICK));		}				public function removeSpecIntListeners(theItem:String):void 		{			var theItemInt:Sprite = Sprite(this.parent.parent.getChildByName("_interiorSections"));			var theBaseInt:SectionMenuSecondaryBtnClass = SectionMenuSecondaryBtnClass(theItemInt.getChildByName(theItem));						Sprite(theBaseInt.getChildAt(0)).getChildAt(0).dispatchEvent(new MouseEvent(MouseEvent.CLICK));		}				public function removeExtListeners():void 		{			var theItemExt:Sprite = Sprite(this.parent.parent.getChildByName("_exteriorSections"));			var theBaseExt:SectionMenuSecondaryBtnClass = SectionMenuSecondaryBtnClass(theItemExt.getChildByName("_deck"));						Sprite(theBaseExt.getChildAt(0)).getChildAt(0).dispatchEvent(new MouseEvent(MouseEvent.CLICK));		}				public function removeIntListeners():void 		{			var theItemInt:Sprite = Sprite(this.parent.parent.getChildByName("_interiorSections"));			var theBaseInt:SectionMenuSecondaryBtnClass = SectionMenuSecondaryBtnClass(theItemInt.getChildByName("_baseInterior"));						Sprite(theBaseInt.getChildAt(0)).getChildAt(0).dispatchEvent(new MouseEvent(MouseEvent.CLICK));		}				private function init(theTxt:String):void 		{			_theTxt = theTxt;			_mainFormat.color = 0xFFFFFF;			//_mainFormat.font = "Univers 55";			_mainFormat.font = "Arial";			_mainFormat.size = 11;			_mainTxt.embedFonts = true;			_mainTxt.autoSize = TextFieldAutoSize.LEFT			_mainTxt.antiAliasType = AntiAliasType.ADVANCED;			_mainTxt.defaultTextFormat = _mainFormat;			_mainTxt.selectable = false;			_mainTxt.mouseEnabled = false;			this.buttonMode = true;						addChild(_content);						_content.addEventListener(Event.ADDED_TO_STAGE, contentAdded, false, 0, true);			addEventListener(MouseEvent.CLICK, btnClicked, false, 0, true);			addEventListener(MouseEvent.MOUSE_OVER, btnOver, false, 0, true);			addEventListener(MouseEvent.MOUSE_OUT, btnOut, false, 0, true);		}				private function contentAdded(event:Event):void 		{			var mainTimeline:Object = parent.parent.parent;						if(_theTxt == "piping color: ") 			{				if(mainTimeline._model == "RZ2" || mainTimeline._model == "RZ4" || mainTimeline._model == "Z1" || mainTimeline._model == "24Vé" || mainTimeline._model == "22Vé") 				{					_mainTxt.text = "accent color: ";				} 				else 				{					_mainTxt.text = _theTxt;				}			} 			else if(_theTxt == "accent vinyl: ") 			{				if(mainTimeline._model == "RZ2" || mainTimeline._model == "RZ4" || mainTimeline._model == "Z1" || mainTimeline._model == "24Vé" || mainTimeline._model == "22Vé") 				{					_mainTxt.text = "accent texture: ";				} 				else 				{					_mainTxt.text = _theTxt;				}			} 			else 			{				_mainTxt.text = _theTxt;			}						switch(this.name) 			{				case "_deck":					_mainTxt.replaceText(6, 50, mainTimeline._colorNames[mainTimeline._deckColor].toString());					removeEventListener(MouseEvent.CLICK, btnClicked, false);					removeEventListener(MouseEvent.MOUSE_OVER, btnOver, false);					removeEventListener(MouseEvent.MOUSE_OUT, btnOut, false);					break;				case "_deckAccent":					_mainTxt.replaceText(13, 50, mainTimeline._colorNames[mainTimeline._deckAccentColor].toString());					break;				case "_splitDeckAccent":					_mainTxt.replaceText(19, 50, mainTimeline._colorNames[mainTimeline._splitDeckAccentColor].toString());					break;				case "_hull":					_mainTxt.replaceText(6, 50, mainTimeline._colorNames[mainTimeline._hullColor].toString());					break;				case "_mainPanel":					_mainTxt.replaceText(12, 50, mainTimeline._colorNames[mainTimeline._mainPanelColor].toString());					break;				case "_mainPanelAccent":				  _mainTxt.replaceText( 19, 50, mainTimeline._colorNames[mainTimeline._mainPanelAccentColor].toString());				  break;				case "_secondPanel":					_mainTxt.replaceText(14, 50, mainTimeline._colorNames[mainTimeline._secondPanelColor].toString());					break;				case "_secondPanelAccent":				  _mainTxt.replaceText(21, 50, mainTimeline._colorNames[mainTimeline._secondPanelAccentColor].toString());				  break;				case "_transomAccent":					_mainTxt.replaceText(16, 50, mainTimeline._colorNames[mainTimeline._transomAccentColor].toString());					break;				case "_swimPlatform":					_mainTxt.replaceText(15, 50, mainTimeline._colorNames[mainTimeline._swimPlatformColor].toString());					break;				case "_tower":				  _mainTxt.replaceText(7, 50, mainTimeline._colorNames[mainTimeline._towerColor].toString());				  break;				case "_baseInterior":					_mainTxt.replaceText(15, 50, mainTimeline._intPkgColor.toString());					break;				case "_accentVinyl":					_mainTxt.replaceText(14, 50, mainTimeline._colorNames[mainTimeline._accentVinylColor].toString());					break;				case "_accentTexture":					if(mainTimeline._model == "RZ2" || mainTimeline._model == "RZ4" || mainTimeline._model == "Z1" || mainTimeline._model == "24Vé" || mainTimeline._model == "22Vé") 					{						_mainTxt.replaceText(16, 50, mainTimeline._accentTextureName.toString());					} 					else 					{						if(mainTimeline._accentTextureColor == "none") 						{							_mainTxt.replaceText(14, 50, mainTimeline._accentTextureName.toString());						} 						else 						{							_mainTxt.replaceText(14, 50, mainTimeline.colorNames[mainTimeline._accentTextureColor].toString());						}					}					break;				case "_dashAccent":					_mainTxt.replaceText(13, 50, mainTimeline._colorNames[mainTimeline._dashAccentColor].toString());					break;				default:					_mainTxt.replaceText(6, 50, mainTimeline._colorNames[mainTimeline._deckColor].toString());			}						_content.addChild(_btnHolder);			_btnHolder.addEventListener(Event.ADDED_TO_STAGE, btnAdded, false, 0, true);			_content.removeEventListener(Event.ADDED_TO_STAGE, contentAdded, false);		}				private function btnAdded(event:Event):void 		{			_btnHolder.addChild(_mainTxt);			_mainTxt.addEventListener(Event.ADDED_TO_STAGE, mainTxtAdded, false, 0, true);			_btnHolder.removeEventListener(Event.ADDED_TO_STAGE, btnAdded, false);		}				private function mainTxtAdded(event:Event):void 		{			if(this.name == "_deck") 			{				var theTxt:TextField = TextField(event.target);				var colorInfo:ColorTransform = theTxt.transform.colorTransform;								colorInfo.color = 0xFF6600;				theTxt.transform.colorTransform = colorInfo;			}						_mainTxt.removeEventListener(Event.ADDED_TO_STAGE, mainTxtAdded, false);		}				private function btnClicked(event:MouseEvent):void 		{			var itemClicked:Object = event.currentTarget;						resetBtns();						itemClicked.removeEventListener(MouseEvent.MOUSE_OVER, btnOver, false);			itemClicked.removeEventListener(MouseEvent.MOUSE_OUT, btnOut, false);			itemClicked.removeEventListener(MouseEvent.CLICK, btnClicked, false);						var theTxt:TextField = event.target.getChildAt(0);			var colorInfo:ColorTransform = theTxt.transform.colorTransform;						colorInfo.color = 0xFF6600;			theTxt.transform.colorTransform = colorInfo;						var mainTimeline:Object = parent.parent.parent;						switch(itemClicked.name) 			{				case "_deck":					mainTimeline._section = "s1";					mainTimeline.sectionSwitch();					break;				case "_deckAccent":					mainTimeline._section = "s2";					mainTimeline.sectionSwitch();					break;				case "_splitDeckAccent":					mainTimeline._section = "s3";					mainTimeline.sectionSwitch();					break;				case "_hull":					mainTimeline._section = "s4";					mainTimeline.sectionSwitch();					break;				case "_mainPanel":					mainTimeline._section = "s5";					mainTimeline.sectionSwitch();					break;				case "_mainPanelAccent":					mainTimeline._section = "sMainPanelAccent";					mainTimeline.sectionSwitch();					break;				case "_secondPanel":					mainTimeline._section = "s6";					mainTimeline.sectionSwitch();					break;					case "_secondPanelAccent":					mainTimeline._section = "sSecondPanelAccent";					mainTimeline.sectionSwitch();					break;				  case "_transomAccent":					mainTimeline._section = "sTransomAccent";					mainTimeline.sectionSwitch();					break;				case "_swimPlatform":					mainTimeline._section = "s7";					mainTimeline.sectionSwitch();					break;				case "_tower":				  mainTimeline._section = "sTower";				  mainTimeline.sectionSwitch();				  break;				case "_baseInterior":					mainTimeline._section = "s9";					mainTimeline.sectionSwitch();					break;				case "_accentVinyl":					mainTimeline._section = "s10";					mainTimeline.sectionSwitch();					break;				case "_accentTexture":					mainTimeline._section = "s11";					mainTimeline.sectionSwitch();					break;				case "_dashAccent":					mainTimeline._section = "s12";					mainTimeline.sectionSwitch();					break;				default:					mainTimeline._section = "s1";					mainTimeline.sectionSwitch();			}		}				private function btnOver(event:MouseEvent):void 		{			var theTxt:TextField = event.target.getChildAt(0);			var colorInfo:ColorTransform = theTxt.transform.colorTransform;						colorInfo.color = 0xFF6600;			theTxt.transform.colorTransform = colorInfo;		}				private function btnOut(event:MouseEvent):void 		{			var theTxt:TextField = event.target.getChildAt(0);			var colorInfo:ColorTransform = theTxt.transform.colorTransform;						colorInfo.color = 0xFFFFFF;			theTxt.transform.colorTransform = colorInfo;		}				private function resetBtns():void 		{			for(var i:uint=0; i < Sprite(this.parent.parent.getChildByName("_exteriorSections")).numChildren; i++) 			{				var theItem:Sprite = Sprite(this.parent.parent.getChildByName("_exteriorSections"));								theItem.getChildAt(i).removeEventListener(MouseEvent.MOUSE_OVER, btnOver, false);				theItem.getChildAt(i).removeEventListener(MouseEvent.MOUSE_OUT, btnOut, false);				theItem.getChildAt(i).removeEventListener(MouseEvent.CLICK, btnClicked, false);								if(theItem.getChildAt(i).hasEventListener(MouseEvent.MOUSE_OVER) == false) 				{					theItem.getChildAt(i).addEventListener(MouseEvent.MOUSE_OVER, btnOver, false, 0, true);					theItem.getChildAt(i).addEventListener(MouseEvent.MOUSE_OUT, btnOut, false, 0, true);					theItem.getChildAt(i).addEventListener(MouseEvent.CLICK, btnClicked, false, 0, true);				}								var theTxt:TextField = TextField(Sprite(Sprite(Sprite(theItem.getChildAt(i)).getChildAt(0)).getChildAt(0)).getChildAt(0));				var colorInfo:ColorTransform = theTxt.transform.colorTransform;								colorInfo.color = 0xFFFFFF;				theTxt.transform.colorTransform = colorInfo;			}						for(var j:uint=0; j < Sprite(this.parent.parent.getChildByName("_interiorSections")).numChildren; j++) 			{				var theItemInt:Sprite = Sprite(this.parent.parent.getChildByName("_interiorSections"));								theItemInt.getChildAt(j).removeEventListener(MouseEvent.MOUSE_OVER, btnOver, false);				theItemInt.getChildAt(j).removeEventListener(MouseEvent.MOUSE_OUT, btnOut, false);				theItemInt.getChildAt(j).removeEventListener(MouseEvent.CLICK, btnClicked, false);								if(theItemInt.getChildAt(j).hasEventListener(MouseEvent.MOUSE_OVER) == false) 				{					theItemInt.getChildAt(j).addEventListener(MouseEvent.MOUSE_OVER, btnOver, false, 0, true);					theItemInt.getChildAt(j).addEventListener(MouseEvent.MOUSE_OUT, btnOut, false, 0, true);					theItemInt.getChildAt(j).addEventListener(MouseEvent.CLICK, btnClicked, false, 0, true);				}								var theTxtInt:TextField = TextField(Sprite(Sprite(Sprite(theItemInt.getChildAt(j)).getChildAt(0)).getChildAt(0)).getChildAt(0));				var colorInfoInt:ColorTransform = theTxtInt.transform.colorTransform;								colorInfoInt.color = 0xFFFFFF;				theTxtInt.transform.colorTransform = colorInfoInt;			}		}	}}